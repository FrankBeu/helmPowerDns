apiVersion: v1
kind: Secret
metadata:
  name: {{ include "powerdns.fullname" . }}admin-setup
  labels:
{{ include "powerdnsadmin.labels" . | indent 4 }}
type: Opaque
stringData:
  1-user.sql: |
    --
    -- PostgreSQL database dump
    --

    -- Dumped from database version 11.10
    -- Dumped by pg_dump version 11.10

    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SELECT pg_catalog.set_config('search_path', '', false);
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    --
    -- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: pdns
    --

    INSERT INTO public."user" (id, username, password, firstname, lastname, email, otp_secret, role_id, confirmed) VALUES (1, 'frank', '$2b$12$qvuUAQOv6/zKXG9gHdR25O9DnqUkVlcGWVVJY4kQXl054SxvBOcv.', 'Frank', 'Beutelschiess', 'frank@thesym.site', NULL, 1, false);


    --
    -- Name: user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: pdns
    --

    SELECT pg_catalog.setval('public.user_id_seq', 1, true);


    --
    -- PostgreSQL database dump complete
    --
  2-setting.sql: |
    --
    -- PostgreSQL database dump
    --

    -- Dumped from database version 11.10
    -- Dumped by pg_dump version 11.10

    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SELECT pg_catalog.set_config('search_path', '', false);
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    --
    -- Data for Name: setting; Type: TABLE DATA; Schema: public; Owner: pdns
    --

    INSERT INTO public.setting (id, name, value) VALUES (1, 'pdns_api_url', '{{ include "powerdnsadmin.api-url" . }}')                     ON CONFLICT (id) DO UPDATE SET value = '{{ include "powerdnsadmin.api-url" . }}';
    INSERT INTO public.setting (id, name, value) VALUES (2, 'pdns_api_key', '{{ .Values.powerdns.api_key }}')                              ON CONFLICT (id) DO UPDATE SET value = '{{ .Values.powerdns.api_key }}';
    INSERT INTO public.setting (id, name, value) VALUES (3, 'pdns_version', '{{ .Chart.AppVersion }}')                                     ON CONFLICT (id) DO UPDATE SET value = '{{ .Chart.AppVersion }}';
    INSERT INTO public.setting (id, name, value) VALUES (4, 'local_db_enabled', 'True')                                                    ON CONFLICT (id) DO UPDATE SET value = 'True';
    INSERT INTO public.setting (id, name, value) VALUES (5, 'signup_enabled', INITCAP('{{ .Values.powerdnsadmin.config.setting.signup_enabled }}')) ON CONFLICT (id) DO UPDATE SET value = INITCAP('{{ .Values.powerdnsadmin.config.setting.signup_enabled }}');

    --
    -- Name: setting_id_seq; Type: SEQUENCE SET; Schema: public; Owner: pdns
    --

    SELECT pg_catalog.setval('public.setting_id_seq', 5, true);


    --
    -- PostgreSQL database dump complete
    --

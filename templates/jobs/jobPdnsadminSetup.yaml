apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "powerdns.fullname" . }}admin-db-setup
  labels:
    {{- include "powerdnsadmin.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ include "powerdns.fullname" . }}admin-db-setup
      labels:
        {{- include "powerdnsadmin.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: {{ include "powerdns.fullname" . }}admin-db-setup-init
          image: {{ template "psql.imageName" . }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command:
            - /bin/sh
            - -c
            - >
              set -x;
              while [ $(psql -qtAX -c "select (exists (select 1 from information_schema.tables where table_name = 'setting'))::int;" || echo 0) -ne 1 ]; do
                 sleep 15;
              done
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_host
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_password
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}admin
                  key: postgres_database_admin
      containers:
        - name: {{ include "powerdns.fullname" . }}admin-db-setup-main
          image: {{ include "psql.imageName" . }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command:
            - /bin/sh
            - -c
            - |
              for script in /dbSetupScripts/*.sql; do
                psql -a -f "$script"
              done
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_host
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_password
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}admin
                  key: postgres_database_admin
          volumeMounts:
           - name: db-setup-scripts
             mountPath: /dbSetupScripts
      volumes:
      - name: db-setup-scripts
        secret:
          secretName: powerdnsadmin-setup
      restartPolicy: OnFailure

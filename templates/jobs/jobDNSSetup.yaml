apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "powerdns.fullname" . }}-dns-setup
  labels:
    {{- include "powerdns.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: {{ include "powerdns.fullname" . }}-dns-setup
      labels:
        {{- include "powerdns.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: {{ include "powerdns.fullname" . }}admin-db-setup-init
          image: {{ template "psql.imageName" . }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command: [ "bin/sh", "-c", "pg_isready" ]
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_host
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_password
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_database
      containers:
        - name: {{ include "powerdns.fullname" . }}admin-db-setup-main
          image: {{ include "psql.imageName" . }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command:
            - /bin/sh
            - -c
            - >
               psql -a
               -c "TRUNCATE TABLE comments       CASCADE;"
               -c "TRUNCATE TABLE cryptokeys     CASCADE;"
               -c "TRUNCATE TABLE domainmetadata CASCADE;"
               -c "TRUNCATE TABLE domains        CASCADE;"
               -c "TRUNCATE TABLE records        CASCADE;"
               -c "TRUNCATE TABLE supermasters   CASCADE;"
               -c "TRUNCATE TABLE tsigkeys       CASCADE;"
          command: [ "bin/sh", "-c", "./setupScripts/1-dnsSetup.sh" ]
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_host
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_password
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "powerdns.fullname" . }}
                  key: postgres_database
          volumeMounts:
           - name: setup-scripts
             mountPath: /setupScripts
      volumes:
      - name: setup-scripts
        secret:
          secretName: powerdns-dns-setup
          defaultMode: 0777
      restartPolicy: OnFailure
